
class:
  name: Exchange
  superClass: Entity
  example: exchange.json
  doc: >
        An Exchange is an input or output of a [Flow] in a [Process]. The amount
        of an exchange is given in a specific unit of a quantity ([FlowProperty])
        of the flow. The allowed units and flow properties that can be used for
        a flow in an exchange are defined by the flow property information in
        that flow (see also the [FlowPropertyFactor] type). 

  properties:
    - name: avoidedProduct
      type: boolean
      doc: Indicates whether this exchange is an avoided product.

    - name: costFormula
      type: string
      doc: A formula for calculating the costs of this exchange.
    
    - name: costValue
      type: double
      doc: The costs of this exchange.
    
    - name: currency
      type: Ref[Currency]
      doc: The currency in which the costs of this exchange are given.

    - name: internalId
      type: int
      doc: >
            The process internal ID of the exchange. This is used to identify
            exchanges unambiguously within a process (e.g. when linking
            exchanges in a product system where multiple exchanges with the
            same flow are allowed). The value should be >= 1.

    - name: flow
      type: Ref[Flow]
      doc: The reference to the flow of the exchange.

    - name: flowProperty
      type: Ref[FlowProperty]
      doc: The quantity in which the amount is given.

    - name: input
      type: boolean

    - name: quantitativeReference
      type: boolean
      doc: >
           Indicates whether the exchange is the quantitative reference of the
           process.

    - name: baseUncertainty
      type: double

    - name: defaultProvider
      type: Ref[Process]
      doc: >
           A default provider is a [Process] that is linked as the provider of a
           product input or the waste treatment provider of a waste output. It
           is just an optional default setting which can be also ignored when
           building product systems in openLCA. The user is always free to link
           processes in product systems ignoring these defaults (but the flows
           and flow directions have to match of course).

    - name: amount
      type: double

    - name: amountFormula
      type: string

    - name: unit
      type: Ref[Unit]

    - name: dqEntry
      type: string
      doc: >
           A data quality entry like `(1;3;2;5;1)`. The entry is a vector of
           data quality values that need to match the data quality scheme for
           flow inputs and outputs that is assigned to the [Process]. In such
           a scheme the data quality indicators have fixed positions and the
           respective values in the `dqEntry` vector map to these positions.

    - name: uncertainty
      type: Uncertainty

    - name: description
      type: string
      doc: A general comment about the input or output.