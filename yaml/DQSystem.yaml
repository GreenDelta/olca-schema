
class:
  name: DQSystem
  superClass: CategorizedEntity
  example: dq_system.json
  doc: >
       A data quality system (DQS) in openLCA describes a pedigree matrix of $m$
       data quality indicators (DQIs) and $n$ data quality scores (DQ scores).
       Such a system can then be used to assess the data quality of processes
       and exchanges by tagging them with an instance of the system $D$ where
       $D$ is a $m * n$ matrix with an entry $d_{ij}$ containing the value of
       the data quality score $j$ for indicator $i$.
      
       As each indicator in $D$ can only have a single score value, $D$ can be
       stored in a vector $d$ where $d_i$ contains the data quality score for
       indicator $i$. The possible values of the data quality scores are defined
       as a linear order $1 \dots n$. In openLCA, the data quality entry $d$ of
       a process or exchange is stored as a string like `(3;2;4;n.a.;2)` which
       means the data quality score for the first indicator is `3`, for the
       second `2` etc. A specific value is `n.a.` which stands for _not
       applicable_.
      
       In calculations, these data quality entries can be aggregated in
       different ways. For example, the data quality entry of a flow $f$ with a
       contribution of `0.5 kg` and a data quality entry of `(3;2;4;n.a.;2)` in
       a process $p$ and a contribution of `1.5 kg` and a data quality entry of
       `(2;3;1;n.a.;5)` in a process $q$ could be aggregated to `(2;3;2;n.a.;4)`
       by applying an weighted average and rounding.
      
       Finally, custom labels like `A, B, C, ...` or `Very good, Good, Fair, ...`
       for the DQ scores can be assigned by the user. These labels are then
       displayed instead of `1, 2, 3 ...` in the user interface or result
       exports. However, internally the numeric values are used in the data
       model and calculations.

  properties:
    - name: hasUncertainties
      type: boolean

    - name: source
      type: Ref[Source]

    - name: indicators
      type: List[DQIndicator]